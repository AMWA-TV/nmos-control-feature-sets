{
  "description": "NcBulkPropertiesManager class descriptor",
  "classId": [
    1,
    3,
    3
  ],
  "name": "NcBulkPropertiesManager",
  "fixedRole": "BulkPropertiesManager",
  "properties": [],
  "methods": [
    {
      "description": "Get bulk object properties by given path",
      "id": {
        "level": 3,
        "index": 1
      },
      "name": "GetPropertiesByPath",
      "resultDatatype": "NcMethodResultBulkValuesHolder",
      "parameters": [
        {
          "description": "The target role path",
          "name": "path",
          "typeName": "NcRolePath",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "If true will return properties on specified path and all the nested paths",
          "name": "recurse",
          "typeName": "NcBoolean",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        }
      ],
      "isDeprecated": false
    },
    {
      "description": "Validate bulk properties for setting by given paths",
      "id": {
        "level": 3,
        "index": 2
      },
      "name": "ValidateSetPropertiesByPath",
      "resultDatatype": "NcMethodResultObjectPropertiesSetValidation",
      "parameters": [
        {
          "description": "The values offered (this may include read-only values and also paths which are not the target role path)",
          "name": "dataSet",
          "typeName": "NcBulkValuesHolder",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "The target role path",
          "name": "path",
          "typeName": "NcRolePath",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "If true will validate properties on target path and all the nested paths",
          "name": "recurse",
          "typeName": "NcBoolean",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "If left null then all properties regardless of their traits will be validated for restore. When populated (not null) only properties with these specific traits are validated for restore",
          "name": "propertyTraits",
          "typeName": "NcPropertyTrait",
          "isNullable": true,
          "isSequence": true,
          "constraints": null
        }
      ],
      "isDeprecated": false
    },
    {
      "description": "Set bulk properties by given paths",
      "id": {
        "level": 3,
        "index": 3
      },
      "name": "SetPropertiesByPath",
      "resultDatatype": "NcMethodResultObjectPropertiesSetValidation",
      "parameters": [
        {
          "description": "The values offered (this may include read-only values and also paths which are not the target role path)",
          "name": "dataSet",
          "typeName": "NcBulkValuesHolder",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "The target role path",
          "name": "path",
          "typeName": "NcRolePath",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "If true will set properties on target path and all the nested paths",
          "name": "recurse",
          "typeName": "NcBoolean",
          "isNullable": false,
          "isSequence": false,
          "constraints": null
        },
        {
          "description": "If left null then all properties regardless of their traits will be included in the restore. When populated (not null) only properties with these specific traits are included in the restore",
          "name": "propertyTraits",
          "typeName": "NcPropertyTrait",
          "isNullable": true,
          "isSequence": true,
          "constraints": null
        }
      ],
      "isDeprecated": false
    }
  ],
  "events": []
}